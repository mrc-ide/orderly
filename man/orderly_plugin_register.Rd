% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plugin.R
\name{orderly_plugin_register}
\alias{orderly_plugin_register}
\title{Register an orderly plugin}
\usage{
orderly_plugin_register(name, config, serialise, schema = NULL)
}
\arguments{
\item{name}{The name of the plugin, typically the package name}

\item{config}{A function to read, check and process the
configuration section in \code{orderly_config.yml}. This function
will be passed the deserialised data from the plugin's section
of \code{orderly_config.yml}, and the full path to that file.  As the
order of loading of plugins is not defined, each plugin must
standalone and should not try and interact with other plugins at
load. It should return a processed copy of the configuration
data, to be passed in as the second argument to \code{read}.}

\item{serialise}{A function to serialise any metadata added by the
plugin's functions to the outpack metadata.}

\item{schema}{Optionally a path to a schema for the metadata
created by this plugin. See \code{vignette("plugins")} for details.}
}
\value{
Nothing, this function is called for its side effect of
registering a plugin.
}
\description{
Create an orderly plugin. A plugin is typically defined by a
package and is used to extend orderly by enabling new
functionality, declared in \code{orderly_config.yml} and \code{orderly.R}
and affecting the running of reports primarily by creating new
objects in the report environment.  This system is discussed in
more detail in \code{vignette("plugins")}, but will be expanded (likely
in breaking ways) soon.
}
