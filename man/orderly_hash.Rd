% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outpack_hash.R
\name{orderly_hash_file}
\alias{orderly_hash_file}
\alias{orderly_hash_data}
\title{Compute a hash}
\usage{
orderly_hash_file(path, algorithm = NULL, root = NULL, locate = TRUE)

orderly_hash_data(data, algorithm = NULL, root = NULL, locate = TRUE)
}
\arguments{
\item{path}{The name of the file to hash}

\item{algorithm}{The name of the algorithm to use, overriding that
in the orderly root.}

\item{root}{The path to the root directory, or \code{NULL} (the
default) to search for one from the current working directory if
\code{locate} is \code{TRUE}. This function does not require that the
directory is configured for orderly, and can be any \code{outpack}
root (see \link{orderly_init} for details).}

\item{locate}{Logical, indicating if the root should be searched
for.  If \code{TRUE}, then we looks in the directory given for \code{root}
(or the working directory if \code{NULL}) and then up through its
parents until it finds an \code{.outpack} directory or
\code{orderly_config.yml}}

\item{data}{A string to hash}
}
\value{
A string in the format \verb{<algorithm>:<digest>}
}
\description{
Use orderly2's hashing functions.  This is intended for advanced
users, in particular those who want to create hashes that are
consistent with orderly2 from within plugins. The default
behaviour is to use the same algorithm as used in the orderly root
(via the \code{root} argument, and the usual root location
approach). However, if a string is provided for \code{algorithm} you
can use an alternative algorithm.
}
\examples{
orderly2::orderly_hash_data("hello", "md5")
}
